##########################################################
##  EM32 Websensor Configuration File v4.00 for Nagios  ##
##########################################################

# This file requires esensors.cfg to be loaded first in Nagios
# This file has been modified to use time based alerting for Illumination.

# !!! IMPORTANT !!! 
# If you are using Nagios 1.x, comment out line #22 and then uncomment line 36
# If you are using Nagios 2.x, do the reverse.  

####################
## CONTACT GROUPS ##
####################

# We only have one contact in this simple configuration file, so there is
# no need to create more than one contact group.

define contactgroup{
        contactgroup_name       websensor-admins
        alias                   Websensor Administrators
        members                 websensor-admin
        }

###################
##  WEBSENSORS   ##
###################

# Since this is a simple configuration file, only one Websensor is monitored.
# You may add more Websensors by copying the host definition below.

define host{ 						  
        use                     websensor-host            ; Name of host template to use
        host_name               websensor1		 
        alias                   websensor1
        address                 192.168.254.192
	contact_groups  	websensor-admins ; This is here for Nagios 2.x only. Comment out for Nagios 1.x
        }



###################
##  HOST GROUPS  ##
###################

# If you have added new hosts on the line above, then add them here too.

define hostgroup{
        hostgroup_name  Websensors
        alias           Esensors Monitoring Devices
        members         websensor1		; <-- Add the host name here, comma seperated, if you have added a new one above.
########contact_groups  websensor-admins ;This is here for Nagios 1.x only. Comment out if using Nagiox 2.x
        }

###################
##  CONTACTS     ##
###################

# This assumes that you have an account (or email alias) called
# "websensor-admin" on the local host.
# If you wish to add more contacts, remember to edit esensors.cfg
# and add the new contact into the Contact Group

define contact{
        contact_name                    websensor-admin
	use                             generic-contact         ; Inherit default contact notifications
        alias                           Websensor Administrator       
        email                           websensor-admin@localhost ; The email address to contact
        }

###############################
##  SENSOR POLLING SERVICES  ##
###############################

# Define a service to check the Main Temperature Sensor of a Websensor. This has a tag <sht> on the status.xml of the sensor. 
# if this sensor is not present, you can comment out the service. 
# The four numbers in the check command arguments are
# Low Temperature Warning = 20
# High Temperature Warning = 90
# Low Temperature Critical = 10
# High Temperature Critical = 110
# You may edit the check_command arguments to your needs.

define service{
        use				websensor-service         ; Name of service template to use
        hostgroup_name			Websensors
        service_description		Ambient Temperature
	check_command			check_EM32_temp!20!90!10!110
        }

		
# Define a service to check the Humidity of a Websensor. This also has a tag <sht> on the status.xml of the sensor. 
# if this sensor is not present, you can comment out the service. 
# The four numbers in the check command arguments are
# Low Humidity Warning = 10
# High Humidity Warning = 90
# Low Humidity Critical = 5
# High Humidity Critical = 95
# You may edit the check_command arguments to your needs.

define service{
        use				websensor-service         ; Name of service template to use
        hostgroup_name			Websensors
        service_description		Humidity
	check_command			check_EM32_humidity!2!95!1!99
        }

		
# Define a service to check the Illumination of a Websensor. This has a tag <ilum> on the status.xml of the sensor. 
# if this sensor is not present, you can comment out the service. 
# The four numbers in the check command arguments are
# Low Illumination Warning = 10
# High Illumination Warning = 100
# Low Illumination Critical = 1
# High Illumination Critical = 200
# You may edit the check_command arguments to your needs.

define service{
        use				websensor-service         ; Name of service template to use
        hostgroup_name			Websensors
        service_description		Illumination
	check_command			check_EM32_light!0!100!0!200
        }

# Define a service to check the Illumination of a Websensor Toggle alerts based on system time

# ************command syntax: check_light_time!WC!WW!CW!CC!Wstart!Wend

# 	Wstart is the time that you specify for the start of the work hours
# 	Wend is the time that you specify for the end of the work hours
#	All hours which are outside the hours Wstart to Wend ara considered closed hours.
#       Wstart can be less than or greater than Wend and the plugin works accordingly.
# 	WC is the critical threshold below which you get a crtical alert during work hours.
# 	WW is the warning threshold for which you get warning for any measurement between WC to WW during work hours.
#	All measurements above the WW threshold are considered as an OK status.
# 	CC is the critical threshold above which you get a crtical alert during closed hours.
# 	Cw is the warning threshold for which you get warning for any measurement between WC to WW during closed hours.
#	All measurements below the WW threshold are considered as an OK status.
# You may edit the check_command arguments to your needs.

#define service{
#        use						websensor-service         ; Name of service template to use
#        hostgroup_name			Websensors
#        service_description		EM01 Websensor Illumination
#	 check_command			check_light_time!40!20!15!25!10.31!18.01
#        }

		
###########################################################################################
##  Service Check on Additional Sensors, External Modules for the Websensor  ##
###########################################################################################

# You may ignore this section if you are unsure of what they are.
# You can comment/uncomment the services for the External Module that your Websensor has. 
# To know what sensors/modules are present, see the status.xml page of the sensor.
				
define service{							; RTD/Thermistor service definition
        use				websensor-service		; Name of service template to use
        hostgroup_name			Websensors
        service_description		Thermistor Temperature
	 check_command			check_EM32_thm!20!90!10!110
        }

define service{							; Voltage Service definition
        use				websensor-service		; Name of service template to use
        hostgroup_name			Websensors
        service_description		Line Voltage
		check_command		check_EM32_voltage!110!123!100!125
        }

# Define a service to check Door Sensor.
# The only significant number in the check command arguments is the first one.eg: !0!0!0!0 or !1!0!0!0
# Normal State = 0 (Means normally closed, Alarm when door is open. 1 means normally open. Alarm when door is closed)

# You may edit the check_command arguments to your needs.
define service{							; Contact Closure Service
        use				websensor-service		; Name of service template to use
        hostgroup_name			Websensors
        service_description		Door/Contact Sensor
	 check_command			check_EM32_contact!0!0!0!0
        }

define service{							; Flood Sensor
        use				websensor-service		; Name of service template to use
        hostgroup_name			Websensors
        service_description		Flood Sensor
	check_command			check_EM32_flood!0!0!0!0	; The arguments have no meaning in this one. 
        }
